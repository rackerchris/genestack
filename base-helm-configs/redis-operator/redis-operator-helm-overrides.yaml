---
# Redis Operator and Cluster Overrides
# Defines custom settings to override defaults in base values.yaml

# -- Cluster DNS name
clusterName: ${CLUSTER_NAME}

# Namespace configuration
# Controls the namespace for the Redis operator and cluster
namespace:
  create: true
  name: redis-systems

# Redis Cluster Configuration Overrides
redisCluster:
  # -- Name of the Redis cluster (optional, defaults to empty)
  name: redis-cluster
  # -- Number of shards in the cluster (implied by leader/follower replicas)
  clusterSize: 3
  # -- Redis version to use
  clusterVersion: v7
  # -- Enable persistence for the cluster
  persistenceEnabled: true
  # -- Image configuration for Redis pods
  image: quay.io/opstree/redis
  tag: v7.0.15
  imagePullPolicy: IfNotPresent
  # -- Secrets for image pull (optional)
  imagePullSecrets: []
    # - name: Secret with Registry credentials
  # -- Redis authentication secret (optional)
  redisSecret:
    secretName: ''
    secretKey: ''
  # -- Resource requests and limits (optional)
  resources: {}
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
  # -- Minimum seconds a pod must be ready before considered available
  minReadySeconds: 0
  # -- Some fields of statefulset are immutable, such as volumeClaimTemplates.
  # When set to true, the operator will delete the statefulset and recreate it.
  # Default is false.
  recreateStatefulSetOnUpdateInvalid: false
  # -- Enable pod anti-affinity between leader and follower pods by adding the
  # appropriate label.
  # Notice that this requires the operator to have its mutating webhook enabled,
  # otherwise it will only add an annotation to the RedisCluster CR. Default is
  # false.
  enableMasterSlaveAntiAffinity: false
  # -- Leader configuration
  leader:
    replicas: 3
    serviceType: ClusterIP
    affinity: {}
      # nodeAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     nodeSelectorTerms:
      #     - matchExpressions:
      #       - key: disktype
      #         operator: In
      #         values:
      #         - ssd
    tolerations: []
      # - key: "key"
      #   operator: "Equal"
      #   value: "value"
      #   effect: "NoSchedule"
    nodeSelector: {}
      # memory: medium
    securityContext: {}
    pdb:
      enabled: false
      maxUnavailable: 1
      minAvailable: 1
    livenessProbe: {}
      # timeoutSeconds: 30
      # periodSeconds: 45
      # successThreshold: 1
      # failureThreshold: 4
      # initialDelaySeconds: 15
    readinessProbe: {}
      # timeoutSeconds: 30
      # periodSeconds: 45
      # successThreshold: 1
      # failureThreshold: 4
      # initialDelaySeconds: 15
  # -- Follower configuration
  follower:
    replicas: 3
    serviceType: ClusterIP
    affinity: {}
      # nodeAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     nodeSelectorTerms:
      #     - matchExpressions:
      #       - key: disktype
      #         operator: In
      #         values:
      #         - ssd
    tolerations: []
      # - key: "key"
      #   operator: "Equal"
      #   value: "value"
      #   effect: "NoSchedule"
    nodeSelector: {}
      # memory: medium
    securityContext: {}
    pdb:
      enabled: false
      maxUnavailable: 1
      minAvailable: 1
    livenessProbe: {}
      # timeoutSeconds: 30
      # periodSeconds: 45
      # successThreshold: 1
      # failureThreshold: 4
      # initialDelaySeconds: 15
    readinessProbe: {}
      # timeoutSeconds: 30
      # periodSeconds: 45
      # successThreshold: 1
      # failureThreshold: 4
      # initialDelaySeconds: 15
# -- Labels and Annotations
labels: {}
  # foo: bar
  # test: echo

# -- External Configuration
externalConfig:
  enabled: false
  data: {}
    # tcp-keepalive 400
    # slowlog-max-len 158
    # stream-node-max-bytes 2048

# -- External Service Configuration
externalService:
  enabled: false
  serviceType: {}
  port: {}
  annotations: {}
    # foo: bar

# -- Monitoring and Exporter
serviceMonitor:
  enabled: false
  interval: {}
  scrapeTimeout: {}
  namespace: {}
  extraLabels: {}
    # foo: bar
    # team: devops
redisExporter:
  enabled: false
  image: {}
  tag: {}
  imagePullPolicy: {}
  resources: {}
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
  env: []
    # - name: VAR_NAME
    #   value: "value1"
  securityContext: {}
# -- Sidecars and Init Containers
sidecars: {}
initContainer:
  enabled: false
  image: {}
  imagePullPolicy: {}
  resources: {}
    # requests:
    #   memory: "64Mi"
    #   cpu: "250m"
    # limits:
    #   memory: "128Mi"
    #   cpu: "500m"
  env: []
  command: []
  args: []
# -- Priority and Security
priorityClassName: ''
podSecurityContext: {}
TLS:
  ca: {}
  cert: {}
  key: {}
  secret:
    secretName: ''
acl:
  secret:
    secretName: ''
env: []
  # - name: VAR_NAME
  #   value: "value1"
serviceAccountName: ''

# -- Storage Specification
storageSpec:
  volumeClaimTemplate:
    spec:
      # storageClassName: standard
      accessModes: [ReadWriteOnce]
      resources:
        requests:
          storage: 1Gi
  nodeConfVolume: true
  nodeConfVolumeClaimTemplate:
    spec:
      accessModes: [ReadWriteOnce]
      resources:
        requests:
          storage: 1Gi
    # selector: {}
