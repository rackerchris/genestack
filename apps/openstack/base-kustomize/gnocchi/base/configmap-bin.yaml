# A patch to supplant the `storage-init.sh` script containing an updated
# ceph command that does not use `profile` when setting auth capabilities.
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gnocchi-bin
data:
  storage-init.sh: |
    #!/bin/bash

    set -x
    SECRET=$(mktemp --suffix .yaml)
    KEYRING=$(mktemp --suffix .keyring)
    function cleanup {
        rm -f ${SECRET} ${KEYRING}
    }
    trap cleanup EXIT

    set -ex
    ceph -s
    function ensure_pool () {
      ceph osd pool stats $1 || ceph osd pool create $1 $2
      local test_version=$(ceph tell osd.* version | egrep -c "nautilus|mimic|luminous" | xargs echo)
      if [[ ${test_version} -gt 0 ]]; then
        ceph osd pool application enable $1 $3
      fi
    }
    ensure_pool ${RBD_POOL_NAME} ${RBD_POOL_CHUNK_SIZE} "gnocchi-metrics"

    if USERINFO=$(ceph auth get client.${RBD_POOL_USER}); then
      echo "Cephx user client.${RBD_POOL_USER} already exist."
      echo "Update its cephx caps"
      ceph auth caps client.${RBD_POOL_USER} \
        mon "allow r" \
        osd "allow rwx pool=${RBD_POOL_NAME}" \
        mgr "allow r"
      ceph auth get client.${RBD_POOL_USER} -o ${KEYRING}
    else
      ceph auth get-or-create client.${RBD_POOL_USER} \
        mon "allow r" \
        osd "allow rwx pool=${RBD_POOL_NAME}" \
        mgr "allow r" \
        -o ${KEYRING}
    fi

    ENCODED_KEYRING=$(sed -n 's/^[[:blank:]]*key[[:blank:]]\+=[[:blank:]]\(.*\)/\1/p' ${KEYRING} | base64 -w0)
    cat > ${SECRET} <<EOF
    apiVersion: v1
    kind: Secret
    metadata:
      name: "${RBD_POOL_SECRET}"
    type: kubernetes.io/rbd
    data:
      key: $( echo ${ENCODED_KEYRING} )
    EOF
    kubectl apply --namespace ${NAMESPACE} -f ${SECRET}

  gnocchi-resources-cleaner.sh: |
    #!/bin/bash

    set -ex

    echo "Purging the deleted resources with its associated metrics which have lived more than ${DELETED_RESOURCES_TTL}"
    gnocchi resource batch delete "ended_at < '-${DELETED_RESOURCES_TTL}'"

    exit 0
